name: Sync KV secrets to repository secrets
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: false
        type: string
        default: 'dev'

jobs:
  sync:
    name: Sync KV secrets to repository secrets
    runs-on: ubuntu-22.04
    environment: ${{ inputs.env }}
    steps:
    - run: echo "Deploying to ${{ inputs.env }}"

    - name: checkout
      uses: actions/checkout@v2

    - name: install terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.2
        
    - name: az cli login
      uses: azure/login@v1
      with:
        creds: '{"tenantId": "${{ secrets.UMGMT_TENANT_ID }}", "subscriptionId": "${{ secrets.UMGMT_SUBSCRIPTION_ID }}", "clientId": "${{ secrets.UMGMT_CLIENT_ID }}", "clientSecret": "${{ secrets.UMGMT_CLIENT_SECRET }}"}'
        enable-AzPSSession: true

    - name: terraform arm credentials
      shell: bash
      run: |
        echo ARM_CLIENT_ID="${{ secrets.UMGMT_CLIENT_ID }}" >> "$GITHUB_ENV"
        echo ARM_CLIENT_SECRET="${{ secrets.UMGMT_CLIENT_SECRET }}" >> "$GITHUB_ENV"
        echo ARM_TENANT_ID="${{ secrets.UMGMT_TENANT_ID }}" >> "$GITHUB_ENV"
        echo ARM_SUBSCRIPTION_ID="${{ secrets.UMGMT_SUBSCRIPTION_ID }}" >> "$GITHUB_ENV"

    - name: Pull secret names
      shell: bash
      run: |
        SECRETS=$(pwsh -command 'az keyvault secret list --vault-name ${{ vars.UMGMT_KV_REPOSITORY_SECRETS }} | convertfrom-json | ? { $_.name.StartsWith("${{ github.repository }}".Split("/")[1]) } | % { $output += $_.name + " " }; $output.Trim()')
        echo "SECRETS=$SECRETS" >> "$GITHUB_ENV"

    - name: terraform init
      shell: bash
      run: |
        terraform -chdir=$GITHUB_WORKSPACE/terraform/kv-to-repo-secrets/res init \
                  -reconfigure \
                  -backend-config=resource_group_name=${{ vars.TERRAFORM_RESOURCE_GROUP }} \
                  -backend-config=storage_account_name=${{ vars.TERRAFORM_STORAGE_ACCOUNT_NAME }} \
                  -backend-config=container_name=${{ vars.TERRAFORM_CONTAINER_NAME }} \
                  -backend-config=key=${{ vars.TERRAFORM_BACKEND_KEY_SYNC_SECRETS }}

    - name: terraform destroy current secrets
      shell: bash
      run: |
        terraform -chdir=$GITHUB_WORKSPACE/terraform/kv-to-repo-secrets/res destroy \
                  --auto-approve \
                  -var azurerm_tenant_id=${{ secrets.UMGMT_TENANT_ID }} \
                  -var azurerm_client_id=${{ secrets.UMGMT_CLIENT_ID }} \
                  -var azurerm_client_secret=${{ secrets.UMGMT_CLIENT_SECRET }} \
                  -var azurerm_subscription_id=${{ secrets.UMGMT_SUBSCRIPTION_ID }} \
                  -var kv_name=${{ vars.UMGMT_KV_REPOSITORY_SECRETS }} \
                  -var kv_resource_group_name=${{ vars.UMGMT_KV_REPOSITORY_SECRETS_RG_NAME }} \
                  -var kv_secrets="$SECRETS"
                  -var github_token=${{ secrets.GITHUB_TOKEN }}
                  -var github_repository_environment=${{ inputs.env }}

    - name: terraform apply new secrets
      shell: bash
      run: |
        terraform -chdir=$GITHUB_WORKSPACE/terraform/kv-to-repo-secrets/res apply \
                  --auto-approve \
                  -var azurerm_tenant_id=${{ secrets.UMGMT_TENANT_ID }} \
                  -var azurerm_client_id=${{ secrets.UMGMT_CLIENT_ID }} \
                  -var azurerm_client_secret=${{ secrets.UMGMT_CLIENT_SECRET }} \
                  -var azurerm_subscription_id=${{ secrets.UMGMT_SUBSCRIPTION_ID }} \
                  -var kv_name=${{ vars.UMGMT_KV_REPOSITORY_SECRETS }} \
                  -var kv_resource_group_name=${{ vars.UMGMT_KV_REPOSITORY_SECRETS_RG_NAME }} \
                  -var kv_secrets="$SECRETS" 
                  -var github_token=${{ secrets.GITHUB_TOKEN }}
                  -var github_repository_environment=${{ inputs.env }}

    - name: az cli Logout
      run: |
        az logout
        az cache purge
        az account clear
