name: Sync KV secrets to repository secrets
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: false
        type: string
        default: 'dev'

jobs:
  sync:
    name: Sync KV secrets to repository secrets
    runs-on: ubuntu-22.04
    environment: ${{ inputs.env }}
    steps:
    - run: echo "Deploying to ${{ inputs.env }}"

    - name: checkout
      uses: actions/checkout@v2

    - name: runner details
      run: |
        echo ${{ runner.os }}
        echo ${{ runner.arch }}
        echo ${{ runner.name }}

    # - name: Install AZ CLI for non github hosted runner
    #   #if: runner.os != 'Linux'
    #   uses: pietrobolcato/install-azure-cli-action@main


    - name: install terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.2
        
    - name: az cli login
      uses: azure/login@v1
      with:
        creds: '{"tenantId": "${{ secrets.UMGMT_TENANT_ID }}", "subscriptionId": "${{ secrets.UMGMT_SUBSCRIPTION_ID }}", "clientId": "${{ secrets.UMGMT_CLIENT_ID }}", "clientSecret": "${{ secrets.UMGMT_CLIENT_SECRET }}"}'
        #creds: ${{ secrets.UMGMT_AZURE_CREDS }}
        enable-AzPSSession: true

    - name: terraform init
      shell: bash
      run: |
        export ARM_CLIENT_ID="${{ secrets.UMGMT_CLIENT_ID }}"
        export ARM_CLIENT_SECRET="${{ secrets.UMGMT_CLIENT_SECRET }}"
        export ARM_TENANT_ID="${{ secrets.UMGMT_TENANT_ID }}"
        export ARM_SUBSCRIPTION_ID="${{ secrets.UMGMT_SUBSCRIPTION_ID }}"

        terraform -chdir=$GITHUB_WORKSPACE/terraform/kv-to-repo-secrets/res \
        init \
        -reconfigure \
        -backend-config=resource_group_name=${{ vars.TERRAFORM_RESOURCE_GROUP }} \
        -backend-config=storage_account_name=${{ vars.TERRAFORM_STORAGE_ACCOUNT_NAME }} \
        -backend-config=container_name=${{ vars.TERRAFORM_CONTAINER_NAME }} \
        -backend-config=key=${{ vars.TERRAFORM_BACKEND_KEY_SYNC_SECRETS }}


    - name: Pull secrets from the target Key Vault
      shell: bash
      run: |
        secrets=$(pwsh -command 'az keyvault secret list --vault-name kvaaartcentral-repo-dev | convertfrom-json | ? { $_.name.StartsWith("${{ github.repository }}".Split("/")[1]) } | % { $_.name }')
        echo $secrets


    - name: az cli Logout
      run: |
        az logout
        az cache purge
        az account clear
